// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id              String   @id @default(cuid())
  name            String?
  email           String?  @unique
  password        String?
  profilePicture  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  registrations   Registration[]
  payments        Payment[]
}

model Event {
  id            String   @id @default(cuid())
  name          String
  description   String?
  startDate     DateTime
  endDate       DateTime
  location      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  registrations Registration[]
}


model Registration {
  id            String              @id @default(cuid())
  userId        String
  eventId       String
  status        RegistrationStatus  @default(PENDING)
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  ticketId      String?             @unique

  user          User                @relation(fields: [userId], references: [id])
  event         Event               @relation(fields: [eventId], references: [id])
  payments      Payment[]
}


model Payment {
  id              String        @id @default(cuid())
  userId          String
  registrationId  String
  amount          Float
  currency        String
  paymentStatus   PaymentStatus @default(PENDING)
  paymentProvider String?                         // Stripe, PayPal, Bank Transfer, etc.
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  user            User          @relation(fields: [userId], references: [id])
  registration    Registration  @relation(fields: [registrationId], references: [id])
}

enum RegistrationStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}